external_components:
  - source:
      type: git
      url: https://github.com/muxa/esphome-state-machine

globals:
  - id: previous_state
    type: std::string
    restore_value: no
    initial_value: '"BOOTING"'

state_machine:
  - name: Fan Mode
    initial_state: "BOOTING"
    id: state_machine_mode
    diagram: dot
    states:
      - name: NORMAL
        on_set:
          - logger.log: "Normal State"
          - light.turn_on:
              id: fastled_light
              red: 0%
              green: 100%
              blue: 0%
              brightness: 1.0
              effect: None
        on_enter:
          - logger.log: "Normal State"
          - light.turn_on:
              id: fastled_light
              red: 0%
              green: 100%
              blue: 0%
              brightness: 1.0
              effect: None
      - name: SILENCED
        on_enter:
          - logger.log: "Silenced State"
          - light.turn_on:
              id: fastled_light
              red: 0%
              green: 0%
              blue: 100%
              brightness: 1.0
              effect: None
      - name: ERROR
        on_set:
          - logger.log: 
              format: "Setting Error State"
              level: WARN
          - light.turn_on:
              id: fastled_light
              effect: Flashing Red
        on_enter:
          - logger.log: 
              format: "Entering Error State"
              level: WARN
          - light.turn_on:
              id: fastled_light
              effect: Flashing Red
        on_leave:
          - logger.log:
              format: "Error Cleared"
              level: WARN
          - lambda: |-
              id(previous_state) = "CLEARED";
              ESP_LOGW("Error State", "Previous State: %s", id(previous_state).c_str());
          # TODO: set fans to 100%
          # TODO: Change from flashing red to a unique pattern
      - name: BOOTING
        on_set:
          - logger.log: "Fan is booting"
          - light.turn_off:
              id: fastled_light
          - light.turn_on:
              id: fastled_light
              effect: Rainbow Effect
    inputs:
      - name: "TOGGLE"
        transitions:
          - NORMAL -> SILENCED
          - SILENCED -> NORMAL
      - name: "ERROR_ENTER"
        transitions:
          - from: NORMAL
            to: ERROR
            before_transition:
              - lambda: |-
                  id(previous_state) = "NORMAL";
                  ESP_LOGW("Error State", "Previous State: %s", id(previous_state).c_str());
          - from: SILENCED
            to: ERROR
            before_transition:
              - lambda: |-
                  id(previous_state) = "SILENCED";
                  ESP_LOGW("Error State", "Previous State: %s", id(previous_state).c_str());
      - name: "ERROR_EXIT" 
        transitions:
          - ERROR -> NORMAL
          - ERROR -> SILENCED
          # - ERROR -> BOOTING
      - name: "ERROR2NORMAL"
        transitions:
          - ERROR -> NORMAL
      - name: "ERROR2SILENCED"
        transitions:
          - ERROR -> SILENCED

text_sensor:
  - platform: state_machine
    name: Cooling Mode
    id: state_machine_text
